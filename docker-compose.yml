version: '3.8'

services:
  ordering:
    build: ./ordering_service
    volumes:
      - ./ordering_service:/app
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - vaccine_network

  producer:
    build: ./producer-service
    volumes:
      - ./producer-service:/app
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - vaccine_network

  gateway:
    build: ./gateway
    volumes:
      - ./gateway:/app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - ordering
      - producer
    networks:
      - vaccine_network

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_BASE_URL=http://gateway:8080
    stdin_open: true
    tty: true
    depends_on:
      - ordering
      - producer
      - gateway
    networks:
      - vaccine_network

  db:
    image: postgres:17
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vaccine_network

volumes:
  pgdata:

networks:
  vaccine_network:
    driver: bridge